Hi Ilias,
It's been a while since I implemented the Gibbs HDP, but I try to answer
your question. (Corrections welcome)
I implemented a the HDP variant where m's are integrated out. When we
need values for m, we restore them from our data by simulating the DP.
Here is my Java code for simulating mjk when having only njk. (The code
is mainly inspired by Yee Whye Tee's implementation).
/**
* Calculate mjk (tables in document j serving topic k) by
simulating the DP process.
* @param njk   number of words in document j being associated with
topic k
* @param alpha alpha of the DP
* @return mjk >=0
*/
private int simulMJK(double njk, double alpha) {
if (njk == 0) return 0;
else if (njk == 1) return 1;
else {
// njk > 1
int mjk = 1;
for (int i = 1; i < njk; i++) {
// flip a coin for each njk that tells us whether this
// occurrence was generated by a new table.
// the coin's parameter represents the DP's probability
// of a new table arrival alpha/(i+alpha)
double rnd = Math.random();
double dpTableArrival = (alpha / (i + alpha));
if (rnd < dpTableArrival) {
mjk++;
assert (mjk <= njk) : "m:" + mjk + " n:" + njk;
return mjk;
ilias wrote:
